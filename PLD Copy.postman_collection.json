{
	"info": {
		"_postman_id": "6a3cddc7-7ef2-4836-bbce-819cb1267d03",
		"name": "PLD Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5865326"
	},
	"item": [
		{
			"name": "Users",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{TOKEN_TYPE}} {{TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}:{{PORT}}/api/v1",
					"host": [
						"{{URL}}"
					],
					"port": "{{PORT}}",
					"path": [
						"api",
						"v1"
					]
				},
				"description": "# API GET Request\n\nThis endpoint retrieves user information.\n\n### Authorization\n\nThis request requires the user to be authorized. Please include the required authorization token in the request headers.\n\n### Response\n\n- Status: 200 OK\n    \n- Content-Type: application/json\n    \n\nThe response will contain user information including first name, last name, and email.\n\nExample response:\n\n``` json\n{\n    \"user\": {\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"email\": \"\"\n    }\n}\n\n ```\n\nThis endpoint makes an HTTP GET request to retrieve user information from the API.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\nThe response returns user information in JSON format. The user object includes the following fields:\n\n- `first_name` (string): The first name of the user.\n    \n- `last_name` (string): The last name of the user.\n    \n- `email` (string): The email address of the user.\n    \n\n# JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"first_name\": {\n          \"type\": \"string\"\n        },\n        \"last_name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var res = pm.response.json();\r",
							"    console.log(res)\r",
							"    pm.collectionVariables.set('TOKEN', res.auth.token);\r",
							"    pm.collectionVariables.set('TOKEN_TYPE', res.auth.type);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Abraham\",\r\n    \"last_name\": \"Ventura\",\r\n    \"email\": \"amventuras.95@gmail.com\",\r\n    \"password\": \"abC!12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}:{{PORT}}/api/v1/register",
					"host": [
						"{{URL}}"
					],
					"port": "{{PORT}}",
					"path": [
						"api",
						"v1",
						"register"
					]
				},
				"description": "The endpoint `/api/v1/register` is a POST request used to register a new user. The request should include the user's first name, last name, email, and password in the request body.\n\n### Request Body\n\n- `first_name` (text, required): The first name of the user.\n    \n- `last_name` (text, required): The last name of the user.\n    \n- `email` (text, required): The email address of the user.\n    \n- `password` (text, required): The password for the user account.\n    \n\n#### Testing Scripts\n\nThe request should be tested using scripts that include the required parameters in the request body to ensure successful registration. This script makes it easy to save the token for use in other requests.\n\n### Response\n\nThe endpoint returns a 400 status code with a JSON response in the event of an error, containing an `errors` array with details about the error.\n\nThis endpoint allows the client to register a new user.\n\n#### Request Body\n\n- `first_name` (text, required): The first name of the user.\n    \n- `last_name` (text, required): The last name of the user.\n    \n- `email` (text, required): The email address of the user.\n    \n\n#### Response\n\nThis endpoint allows you to register a new user.\n\n**Request Body**\n\n- `first_name` (text, required): The first name of the user.\n    \n- `last_name` (text, required): The last name of the user.\n    \n- `email` (text, required): The email address of the user.\n    \n- `password` (text, required): The password for the user account.\n    \n\n**Expected response**\n\n- Status: 201 Created\n    \n- Content-Type: application/json\n    \n- `message` (string): A message indicating the outcome of the registration.\n    \n- `auth.token` (string): The authentication token for the registered user.\n    \n- `auth.type` (string): The type of authentication token.\n    \n\n**Failed response (**Incorrect data)\n\n- Status: 400 Bad Request\n    \n- Content-Type: application/json\n    \n- errors (array): A list of messages indicating the outcome of the registration.\n    \n\n**Failed response (**server error)\n\n- Status: 500 Bad Request\n    \n- Content-Type: application/json\n    \n- error (string): Internal Server Error"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var res = pm.response.json();\r",
							"    console.log(res)\r",
							"    pm.collectionVariables.set('TOKEN', res.auth.token);\r",
							"    pm.collectionVariables.set('TOKEN_TYPE', res.auth.type);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"amsventura@gmail.com\",\r\n    \"password\": \"abC!12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}:{{PORT}}/api/v1/login",
					"host": [
						"{{URL}}"
					],
					"port": "{{PORT}}",
					"path": [
						"api",
						"v1",
						"login"
					]
				},
				"description": "### Login API\n\nThis API endpoint is used to authenticate a user by providing their email and password.\n\n#### Request Body\n\n- `email` (string, required): The email of the user.\n    \n- `password` (string, required): The password of the user.\n    \n\n#### Testing Scripts\n\nThe request should be tested using scripts that include the required parameters in the request body to ensure successful registration. This script makes it easy to save the token for use in other requests.\n\n#### Response\n\nUpon a successful request, the server responds with a status code of 200 and a JSON object in the response body containing the following fields:\n\n- `message` (string): A message related to the authentication process.\n    \n- `auth.token` (string): The authentication token for the user.\n    \n- `auth.type` (string): The type of authentication.\n    \n\n**Failed response (**Incorrect data)\n\n- Status: 401 Unauthorized\n    \n- Content-Type: application/json\n    \n- error (string): Wrong email or password\n    \n\n**Failed response (**server error)\n\n- Status: 500 Bad Request\n    \n- Content-Type: application/json\n    \n- error (string): Internal Server Error"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "localhost"
		},
		{
			"key": "PORT",
			"value": "3000"
		},
		{
			"key": "TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "TOKEN_TYPE",
			"value": "",
			"type": "string"
		}
	]
}